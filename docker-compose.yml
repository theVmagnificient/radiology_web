version: "3"

services:
  django:
    build: 
      context: ./django
    ports:
      - "8001:8001"
      - "8000:8000"
    volumes:
            # - ./django/app:/app
      - static_volume:/app/static/
      - aimed_archives:/app/static/research_storage/zips
      - aimed_results:/app/static/research_storage/results
    hostname: django
    environment:
      KAFKA_BROKER_URL: broker:9092 
      TRANSACTIONS_TOPIC: dnn.results 
      PRODUCER_TOPIC: dnn.data 
      KAFKA_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
    command: >
      sh -c "uwsgi --ini radiology_uwsgi.ini"
    depends_on:
      - "db" 
  db:
    image: postgres
  nginx:
    build:
      context: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/mnt/static_files/
      - aimed_archives:/mnt/static_files/research_storage/zips
      - aimed_results:/mnt/static_files/research_storage/results
    depends_on:
      - django

  django-consumer:
    build:
      context: ./django_consumer
    ports:
      - "7979:7979"
    volumes:
      - ./django_consumer/code:/code
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: dnn.results
      PRODUCER_TOPIC: dnn.data
      KAFKA_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      SERVER_HOSTNAME: django
      SERVER_PORT: 8001
    command: >
      sh -c "python kafka_server.py"

  dnn_backend:
    build: ./dnn_backend
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: dnn.data
      PRODUCER_TOPIC: dnn.results
      KAFKA_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CUDA_VISIBLE_DEVICES: cpu
    volumes:
      - aimed_archives:/mnt/archives
      - aimed_results:/mnt/results
      - ./dnn_backend/source:/app/source
    ports:
      - "12222:22"
    command: ["/bin/bash", "-c", "sleep 1000", "source activate aimed && cd /app/source/ && python3 dnn_server.py"]
        #command: ["/bin/bash", "-c", " while :; do echo 'Hit CTRL+C'; sleep 1; done"]

networks:
  default:
     external:
       name: kafka-network

volumes:
  aimed_archives:
    external: true
  aimed_results:
    external: true
  static_volume:

